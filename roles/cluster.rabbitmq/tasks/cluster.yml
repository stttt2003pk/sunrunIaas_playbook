---
# Create Erlang distributed app

- name: start rabbitmq server
  service: name=rabbitmq-server state=started
  tags: [service,rabbitmq]

- name: stop rabbitmq app
  shell: rabbitmqctl stop_app
  tags: rabbitmq

- name: resetting rabbitmq app
  shell: rabbitmqctl reset
  tags: rabbitmq

- name: add this node to cluster
  shell: rabbitmqctl join_cluster --ram rabbit@{{ rabbitmq_cluster_master }}
  register: join_cluster_output
  tags: rabbitmq

- name: skip fail if the node is already a member of the cluster
  fail: msg="join_cluster failed but node is not already a member"
  when: ("'already_member' not in join_cluster_output.stderr") and (join_cluster_output.rc == 1)

- name: start rabbitmq app
  shell: rabbitmqctl start_app
  tags: rabbitmq

- name: Check port 5672
  wait_for: port=5672 host=localhost delay=1 timeout=30

